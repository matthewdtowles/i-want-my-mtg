name: CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start test env
        run: |
          cp .env.example .env
          docker compose up -d postgres
          sleep 10

      - name: Run App Unit Tests
        run: |
          docker compose run --rm web npm test

      - name: Run Scry Unit Tests
        run: |
          docker compose run --rm etl cargo test

      - name: Cleanup
        run: docker compose down -v

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix=sha-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and Push Web App
        uses: docker/build-push-action@v5
        with:
          context: .
          target: production
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/web:latest,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/web:${{ github.sha }}

      - name: Build and Push ETL App
        uses: docker/build-push-action@v5
        with:
          context: ./scry
          target: production
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/etl:latest,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/etl:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy to Production LightSail Instance
        env:
          SSH_PRIVATE_KEY: ${{ secrets.LIGHTSAIL_SSH_PK }}
          LIGHTSAIL_IP: ${{ secrets.LIGHTSAIL_IP }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        run: |
          # Setup SSH key
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key

          # Copy docker-compose files to server
          scp -o StrictHostKeyChecking=no -i private_key docker-compose.prod.yml ubuntu@$LIGHTSAIL_IP:~/
          scp -o StrictHostKeyChecking=no -i private_key .env.prod ubuntu@$LIGHTSAIL_IP:~/

          # Deploy on server
          ssh -o StrictHostKeyChecking=no -i private_key ubuntu@$LIGHTSAIL_IP << 'EOF'
            # Login to GHCR
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # Stop existing containers
            docker compose -f docker-compose.prod.yml down || true

            # Pull latest images
            docker compose --env-file .env.prod -f docker-compose.prod.yml pull

            # Start services
            docker compose --env-file .env.prod -f docker-compose.prod.yml up -d

            # Cleanup old images
            docker image prune -f
          EOF

          # Cleanup local SSH key
          rm private_key